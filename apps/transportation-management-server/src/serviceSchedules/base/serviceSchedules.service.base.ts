/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  ServiceSchedules as PrismaServiceSchedules,
} from "@prisma/client";

export class ServiceSchedulesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.ServiceSchedulesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.serviceSchedules.count(args);
  }

  async serviceSchedulesItems(
    args: Prisma.ServiceSchedulesFindManyArgs
  ): Promise<PrismaServiceSchedules[]> {
    return this.prisma.serviceSchedules.findMany(args);
  }
  async serviceSchedules(
    args: Prisma.ServiceSchedulesFindUniqueArgs
  ): Promise<PrismaServiceSchedules | null> {
    return this.prisma.serviceSchedules.findUnique(args);
  }
  async createServiceSchedules(
    args: Prisma.ServiceSchedulesCreateArgs
  ): Promise<PrismaServiceSchedules> {
    return this.prisma.serviceSchedules.create(args);
  }
  async updateServiceSchedules(
    args: Prisma.ServiceSchedulesUpdateArgs
  ): Promise<PrismaServiceSchedules> {
    return this.prisma.serviceSchedules.update(args);
  }
  async deleteServiceSchedules(
    args: Prisma.ServiceSchedulesDeleteArgs
  ): Promise<PrismaServiceSchedules> {
    return this.prisma.serviceSchedules.delete(args);
  }
}
