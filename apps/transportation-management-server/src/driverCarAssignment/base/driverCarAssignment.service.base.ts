/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  DriverCarAssignment as PrismaDriverCarAssignment,
} from "@prisma/client";

export class DriverCarAssignmentServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.DriverCarAssignmentCountArgs, "select">
  ): Promise<number> {
    return this.prisma.driverCarAssignment.count(args);
  }

  async driverCarAssignments(
    args: Prisma.DriverCarAssignmentFindManyArgs
  ): Promise<PrismaDriverCarAssignment[]> {
    return this.prisma.driverCarAssignment.findMany(args);
  }
  async driverCarAssignment(
    args: Prisma.DriverCarAssignmentFindUniqueArgs
  ): Promise<PrismaDriverCarAssignment | null> {
    return this.prisma.driverCarAssignment.findUnique(args);
  }
  async createDriverCarAssignment(
    args: Prisma.DriverCarAssignmentCreateArgs
  ): Promise<PrismaDriverCarAssignment> {
    return this.prisma.driverCarAssignment.create(args);
  }
  async updateDriverCarAssignment(
    args: Prisma.DriverCarAssignmentUpdateArgs
  ): Promise<PrismaDriverCarAssignment> {
    return this.prisma.driverCarAssignment.update(args);
  }
  async deleteDriverCarAssignment(
    args: Prisma.DriverCarAssignmentDeleteArgs
  ): Promise<PrismaDriverCarAssignment> {
    return this.prisma.driverCarAssignment.delete(args);
  }
}
