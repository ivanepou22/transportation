/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Maintenance as PrismaMaintenance } from "@prisma/client";

export class MaintenanceServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.MaintenanceCountArgs, "select">
  ): Promise<number> {
    return this.prisma.maintenance.count(args);
  }

  async maintenances(
    args: Prisma.MaintenanceFindManyArgs
  ): Promise<PrismaMaintenance[]> {
    return this.prisma.maintenance.findMany(args);
  }
  async maintenance(
    args: Prisma.MaintenanceFindUniqueArgs
  ): Promise<PrismaMaintenance | null> {
    return this.prisma.maintenance.findUnique(args);
  }
  async createMaintenance(
    args: Prisma.MaintenanceCreateArgs
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.create(args);
  }
  async updateMaintenance(
    args: Prisma.MaintenanceUpdateArgs
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.update(args);
  }
  async deleteMaintenance(
    args: Prisma.MaintenanceDeleteArgs
  ): Promise<PrismaMaintenance> {
    return this.prisma.maintenance.delete(args);
  }
}
