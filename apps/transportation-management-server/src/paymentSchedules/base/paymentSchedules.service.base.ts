/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import {
  Prisma,
  PaymentSchedules as PrismaPaymentSchedules,
} from "@prisma/client";

export class PaymentSchedulesServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(
    args: Omit<Prisma.PaymentSchedulesCountArgs, "select">
  ): Promise<number> {
    return this.prisma.paymentSchedules.count(args);
  }

  async paymentSchedulesItems(
    args: Prisma.PaymentSchedulesFindManyArgs
  ): Promise<PrismaPaymentSchedules[]> {
    return this.prisma.paymentSchedules.findMany(args);
  }
  async paymentSchedules(
    args: Prisma.PaymentSchedulesFindUniqueArgs
  ): Promise<PrismaPaymentSchedules | null> {
    return this.prisma.paymentSchedules.findUnique(args);
  }
  async createPaymentSchedules(
    args: Prisma.PaymentSchedulesCreateArgs
  ): Promise<PrismaPaymentSchedules> {
    return this.prisma.paymentSchedules.create(args);
  }
  async updatePaymentSchedules(
    args: Prisma.PaymentSchedulesUpdateArgs
  ): Promise<PrismaPaymentSchedules> {
    return this.prisma.paymentSchedules.update(args);
  }
  async deletePaymentSchedules(
    args: Prisma.PaymentSchedulesDeleteArgs
  ): Promise<PrismaPaymentSchedules> {
    return this.prisma.paymentSchedules.delete(args);
  }
}
