/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Cars as PrismaCars } from "@prisma/client";

export class CarsServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.CarsCountArgs, "select">): Promise<number> {
    return this.prisma.cars.count(args);
  }

  async carsItems(args: Prisma.CarsFindManyArgs): Promise<PrismaCars[]> {
    return this.prisma.cars.findMany(args);
  }
  async cars(args: Prisma.CarsFindUniqueArgs): Promise<PrismaCars | null> {
    return this.prisma.cars.findUnique(args);
  }
  async createCars(args: Prisma.CarsCreateArgs): Promise<PrismaCars> {
    return this.prisma.cars.create(args);
  }
  async updateCars(args: Prisma.CarsUpdateArgs): Promise<PrismaCars> {
    return this.prisma.cars.update(args);
  }
  async deleteCars(args: Prisma.CarsDeleteArgs): Promise<PrismaCars> {
    return this.prisma.cars.delete(args);
  }
}
